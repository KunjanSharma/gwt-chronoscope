# Chronoscope GWT API Overview

= Chronoscope GWT API Overview =

== Hello Chart == 

Assuming you have [http://code.google.com/webtoolkit Google Web Toolkit] installed
already.  If not, [http://code.google.com/webtoolkit/gettingstarted.html get started]

Create a new project using the webAppCreator command line tool:

{{{webAppCreator -out HelloChart com.example.client.HelloChart}}}

Edit src/com/example/HelloChart.gwt.xml and add a line to inherit Chronoscope. 
{{{
<module>
    <inherits name='org.timepedia.chronoscope.Chronoscope' />
    <entry-point class='com.example.client.HelloChart' />;
</module>
}}}

You'll also need to add chronoscope and gwtexporter to your project classpath. So simply put these libraries in the folder:
{{{
  war/WEB-INF/lib
}}}

We'll use a json file for the dataset, it should be in the format: 
{{{
dataset = {
    Id: "unique id for this dataset",
    domain: [ UTCTimeInMilliseconds_1, UTCtimeInMilliseconds_2, ... ],
    range: [ Value_1, Value_2, ... ],
    label: "default label for this dataset",
    axis: "unit"  
}
}}}

Datasets with the same `axis:` identifier will share the same range axis,
which is useful if they're units like "hours", "km", "kbps", "$", etc.

Modify the index.html webAppCreator made and add:

{{{
  <script language='javascript' src='dataset.js'></script>
}}}

Modify your javacode `HelloChart.java`:
{{{
package com.example.client;

import com.google.gwt.core.client.EntryPoint;
import com.google.gwt.core.client.JavaScriptObject;
import com.google.gwt.user.client.ui.Label;
import com.google.gwt.user.client.ui.RootPanel;
import com.google.gwt.user.client.ui.VerticalPanel;

import org.timepedia.chronoscope.client.browser.ChartPanel;
import org.timepedia.chronoscope.client.browser.Chronoscope;
import org.timepedia.chronoscope.client.XYDataset;


public class HelloChart implements EntryPoint {

    public void onModuleLoad() {
        double GOLDEN_RATIO = 1.618;
        int chartWidth = 600, chartHeight = (int) ( chartWidth / GOLDEN_RATIO );
        Chronoscope.setFontBookRendering(true);

        XYDataset[] dataset = new XYDataset[1];
        dataset[0] = Chronoscope.createXYDataset(getJson("dataset"));
        VerticalPanel vp=new VerticalPanel();
        vp.add(new Label(dataset[0].getRangeLabel()));
        ChartPanel chartPanel = Chronoscope.createTimeseriesChart(dataset, chartWidth, chartHeight);
        vp.add(chartPanel);
        RootPanel.get("slot1").add(vp);
    }

    private static native JavaScriptObject getJson(String varName) /*-{
       return $wnd[varName];
    }-*/;
}
}}}


Exporting the Javascript API from your GWT app 
{{{
  Chronoscope chronoscope = new Chronoscope();
  chronoscope.init();
}}}
